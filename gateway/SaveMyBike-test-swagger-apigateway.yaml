---
swagger: "2.0"
info:
  version: "2017-11-20T16:49:46Z"
  title: "SaveMyBike"
host: "ex2rxvvhpc.execute-api.us-west-2.amazonaws.com"
basePath: "/test"
schemes:
- "https"
paths:
  /:
    get:
      consumes:
      - "application/json"
      produces:
      - "text/html"
      responses:
        200:
          description: "200 response"
          headers:
            Content-Type:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "'text/html'"
            responseTemplates:
              text/html: "<html>\n    <head>\n        <style>\n        body {\n  \
                \          color: #333;\n            font-family: Sans-serif;\n  \
                \          max-width: 800px;\n            margin: auto;\n        }\n\
                \        </style>\n    </head>\n    <body>\n        <h1>Welcome to\
                \ your Track Store API</h1>\n        <p>\n            You have succesfully\
                \ deployed your first API. You are seeing this HTML page because the\
                \ <code>GET</code> method to the root resource of your API returns\
                \ this content as a Mock integration.\n        </p>\n        <p>\n\
                \            The Track Store API contains the <code>/tracks</code> and\
                \ <code>/tracks/{trackId}</code> resources. By making a <a href=\"/$context.stage/tracks/\"\
                \ target=\"_blank\"><code>GET</code> request</a> to <code>/tracks</code>\
                \ you can retrieve a list of Tracks in your API. If you are looking\
                \ for a specific track, for example the track with ID 1, you can make\
                \ a <a href=\"/$context.stage/tracks/1\" target=\"_blank\"><code>GET</code>\
                \ request</a> to <code>/tracks/1</code>.\n        </p>\n        <p>\n\
                \            You can use a REST client such as <a href=\"https://www.getpostman.com/\"\
                \ target=\"_blank\">Postman</a> to test the <code>POST</code> methods\
                \ in your API to create a new track. Use the sample body below to send\
                \ the <code>POST</code> request:\n        </p>\n        <pre>\n{\n\
                \    \"type\" : \"cat\",\n    \"price\" : 123.11\n}\n        </pre>\n\
                \    </body>\n</html>"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /config/{username}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /tracks:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Tracks"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.querystring.page: "method.request.querystring.page"
          integration.request.querystring.type: "method.request.querystring.type"
        uri: "http://smb-demo-endpoint.execute-api.com/test/tracks"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      operationId: "CreateTrack"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "NewTrack"
        required: true
        schema:
          $ref: "#/definitions/NewTrack"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/NewTrackResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: "http://trackstore-demo-endpoint.execute-api.com/trackstore/tracks"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'POST,GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /tracks/{trackId}:
    get:
      operationId: "GetTrack"
      produces:
      - "application/json"
      parameters:
      - name: "trackId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Track"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.trackId: "method.request.path.trackId"
        uri: "http://trackstore-demo-endpoint.execute-api.com/trackstore/tracks/{trackId}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "trackId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
definitions:
  Tracks:
    type: "array"
    items:
      $ref: "#/definitions/Track"
  Empty:
    type: "object"
  NewTrackResponse:
    type: "object"
    properties:
      track:
        $ref: "#/definitions/Track"
      message:
        type: "string"
  Track:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
      price:
        type: "number"
  NewTrack:
    type: "object"
    properties:
      type:
        $ref: "#/definitions/TrackType"
      price:
        type: "number"
  TrackType:
    type: "string"
    enum:
    - "dog"
    - "cat"
    - "fish"
    - "bird"
    - "gecko"
